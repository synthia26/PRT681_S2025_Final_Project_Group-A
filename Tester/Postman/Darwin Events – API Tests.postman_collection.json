{
	"info": {
		"_postman_id": "94abb660-7416-47d3-b2c4-39eb1971fe82",
		"name": "Darwin Events â€“ API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47255588",
		"_collection_link": "https://supply-geologist-76889261-1303122.postman.co/workspace/Hussein-Salami's-Workspace~d6581b37-728b-49c3-8c40-2374940c224d/collection/47255588-94abb660-7416-47d3-b2c4-39eb1971fe82?action=share&source=collection_link&creator=47255588"
	},
	"item": [
		{
			"name": "GET /posts/1 (positive).",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"const body = pm.response.json();\r",
							"pm.test(\"Has id = 1\", () => pm.expect(body.id).to.eql(1));\r",
							"pm.test(\"Has title field\", () => pm.expect(body).to.have.property(\"title\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /posts/999999 (negative)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"const body = pm.response.json();\r",
							"pm.test(\"Has id = 1\", () => pm.expect(body.id).to.eql(1));\r",
							"pm.test(\"Has title field\", () => pm.expect(body).to.have.property(\"title\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts/999999",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts",
						"999999"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /posts (positive)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should reject missing title (business rule)\", () => {\r",
							"  const sent = JSON.parse(pm.request.body.raw);\r",
							"  // We assert the request SHOULD include title (so this will FAIL - that's OK)\r",
							"  pm.expect(sent).to.have.property(\"title\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"body\": \"No title here\",\r\n  \"userId\": 99\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/posts",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /posts/1 (positive)",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}