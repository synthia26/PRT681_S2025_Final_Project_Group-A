/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import { getNestedValue as d } from "./misc.mjs";
class h {
  constructor(e) {
    this.expandField = e.expandField, this.selectField = e.selectField, this.hasChildrenField = e.hasChildrenField, this.childrenField = e.childrenField, this.textField = e.textField, this.disableField = e.disableField, this.checkField = e.checkField, this.checkIndeterminateField = e.checkIndeterminateField, this.focusIdField = e.focusIdField;
  }
  expanded(e) {
    return d(this.expandField, e);
  }
  selected(e) {
    return d(this.selectField, e);
  }
  text(e) {
    return d(this.textField, e);
  }
  disabled(e) {
    return d(this.disableField, e);
  }
  hasChildren(e) {
    return d(this.hasChildrenField, e);
  }
  children(e) {
    const i = d(this.childrenField, e);
    return i || [];
  }
  checked(e) {
    return d(this.checkField, e);
  }
  checkIndeterminate(e) {
    return d(this.checkIndeterminateField, e);
  }
  focusId(e) {
    return this.focusIdField && d(this.focusIdField, e);
  }
  getChildrenField() {
    return this.childrenField;
  }
}
export {
  h as TreeFieldsService
};
