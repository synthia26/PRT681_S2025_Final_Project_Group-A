/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
const c = (n) => n instanceof Promise;
function s(n) {
  return n && typeof n == "object" && !Array.isArray(n) && !c(n);
}
const e = (n, ...r) => {
  if (!r.length)
    return n;
  const i = r.shift();
  if (s(n) && s(i))
    for (const o in i)
      o === "__proto__" || o === "constructor" || o === "prototype" || (s(i[o]) ? (n[o] || Object.assign(n, { [o]: {} }), e(n[o], i[o])) : i[o] !== void 0 && Object.assign(n, { [o]: i[o] }));
  return e(n, ...r);
};
export {
  e as deepMerge,
  s as isObject,
  c as isPromise
};
