/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import { useLocalization as b } from "@progress/kendo-react-intl";
import { pagerItemPerPage as C, pagerPageSizeAriaLabel as L } from "../messages/index.mjs";
import { DropDownList as E } from "@progress/kendo-react-dropdowns";
import { getL10NMessage as p, translateMessage as c } from "./utils.mjs";
const x = (a) => {
  const {
    value: t,
    pageSizes: m,
    pageSize: i,
    messagesMap: g,
    size: f,
    navigatable: z,
    visibleElementsRef: o,
    pagerSizesRef: v,
    pagerSizesTitleRef: S,
    adaptive: h,
    adaptiveTitle: d
  } = a, s = m.slice(), l = b();
  t === void 0 && s.filter((e) => e === i).length === 0 && s.unshift(i);
  const u = p(C, g), P = p(L, g), M = (e) => {
    a.pageChange && a.pageChange({ skip: 0, take: parseInt(e.target.value, 10) }, e);
  }, r = c(l, u);
  return o.current.length >= 1 && /* @__PURE__ */ n.createElement("span", { className: "k-pager-sizes", ref: v }, /* @__PURE__ */ n.createElement(
    E,
    {
      value: t !== void 0 ? t : i,
      data: s,
      onChange: M,
      ariaLabel: c(l, P),
      size: f,
      tabIndex: z ? -1 : void 0,
      adaptive: h,
      adaptiveTitle: d || String(r).charAt(0).toUpperCase() + String(r).slice(1)
    }
  ), o.current.length >= 2 && /* @__PURE__ */ n.createElement("span", { ref: S }, r));
};
export {
  x as PagerPageSizes
};
