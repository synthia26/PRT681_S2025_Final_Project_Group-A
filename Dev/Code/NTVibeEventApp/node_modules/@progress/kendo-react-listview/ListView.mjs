/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import * as s from "react";
import { validatePackage as D, getLicenseMessage as R, dispatchEvent as S, Navigation as A, classNames as H, WatermarkOverlay as F } from "@progress/kendo-react-common";
import { packageMetadata as E } from "./package-metadata.mjs";
const o = "k-focus", K = s.forwardRef((r, L) => {
  const g = !D(E, { component: "ListView" }), b = R(E), { data: y = [], item: c, footer: i, header: m, className: C, style: h, onScroll: u, navigatable: v } = r, d = s.useRef(null), f = s.useRef(null), w = s.useCallback(
    () => ({
      onScroll: u,
      props: r,
      context: {},
      state: {},
      refs: {}
    }),
    []
  );
  s.useImperativeHandle(f, w), s.useImperativeHandle(L, () => f.current);
  const I = s.useCallback(
    (e) => S(u, e, w(), void 0),
    []
  ), p = (e, t, a) => {
    a.preventDefault(), t.focusNext(e), t.next(e).classList.add(o), t.previous(e).classList.remove(o);
  }, k = (e, t, a) => {
    a.preventDefault(), t.focusPrevious(e), t.next(e).classList.remove(o), t.previous(e).classList.add(o);
  }, n = s.useMemo(
    () => new A({
      root: d,
      selectors: [".k-listview-item"],
      rovingTabIndex: !0,
      keyboardEvents: {
        keydown: {
          ArrowDown: p,
          ArrowRight: p,
          ArrowUp: k,
          ArrowLeft: k,
          Home: (e, t, a) => {
            a.preventDefault();
            const l = t.first;
            l && t.focusElement(l, e);
          },
          End: (e, t, a) => {
            a.preventDefault();
            const l = t.last;
            l && t.focusElement(l, e);
          },
          Tab: (e, t, a) => {
            t.removeFocusClass(e);
          }
        }
      },
      tabIndex: 0,
      focusClass: o
    }),
    []
  ), N = s.useCallback(n.triggerKeyboardEvent.bind(n), []), x = s.useCallback((e) => {
    e.nativeEvent.target.classList.add(o), n.elements.forEach((t) => {
      t !== e.nativeEvent.target && t.classList.remove(o);
    });
  }, []);
  return s.useEffect(() => {
    if (v)
      return n.initializeRovingTab(), () => n.removeFocusListener();
  }, []), /* @__PURE__ */ s.createElement(
    "div",
    {
      className: H("k-listview", C),
      style: h,
      onKeyDown: (e) => v && N(e),
      onClick: x
    },
    m ? /* @__PURE__ */ s.createElement(m, null) : null,
    /* @__PURE__ */ s.createElement("div", { role: "list", className: "k-listview-content", onScroll: I, ref: d }, c && y.map((e, t) => /* @__PURE__ */ s.createElement(c, { dataItem: e, index: t, key: t }))),
    i ? /* @__PURE__ */ s.createElement(i, null) : null,
    g && /* @__PURE__ */ s.createElement(F, { message: b })
  );
});
K.displayName = "KendoReactListView";
export {
  K as ListView
};
