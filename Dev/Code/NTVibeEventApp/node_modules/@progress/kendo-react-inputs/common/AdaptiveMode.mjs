/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import * as t from "react";
import { ActionSheet as v, ActionSheetFooter as x } from "@progress/kendo-react-layout";
import { checkIcon as C } from "@progress/kendo-svg-icons";
import { Button as o } from "@progress/kendo-react-buttons";
import { useAdaptiveModeContext as g } from "@progress/kendo-react-common";
const E = (i) => {
  const {
    windowWidth: l = 0,
    children: r,
    navigatable: c,
    navigatableElements: s,
    expand: m,
    animation: p,
    title: d,
    subTitle: f,
    footer: e,
    onClose: n
  } = i, h = () => /* @__PURE__ */ t.createElement(
    o,
    {
      tabIndex: 0,
      "aria-label": "Cancel",
      "aria-disabled": "false",
      type: "button",
      fillMode: "flat",
      size: "large",
      themeColor: "primary",
      svgIcon: C,
      onClick: n
    }
  ), a = g(), b = {
    navigatable: c || !1,
    navigatableElements: s || [],
    expand: m,
    animation: p,
    suffixActions: h(),
    onClose: n,
    animationStyles: a && l <= a.small ? { top: 0, width: "100%", height: "100%" } : void 0,
    title: d,
    subTitle: f,
    className: "k-adaptive-actionsheet",
    position: a && l <= a.small ? "fullscreen" : void 0
  };
  return /* @__PURE__ */ t.createElement(v, { ...b }, r, /* @__PURE__ */ t.createElement(x, { className: "k-actions k-actions-stretched" }, /* @__PURE__ */ t.createElement(
    o,
    {
      size: "large",
      className: "k-coloreditor-cancel",
      "aria-label": e.cancelText,
      onClick: e.onCancel
    },
    e.cancelText
  ), /* @__PURE__ */ t.createElement(
    o,
    {
      themeColor: "primary",
      size: "large",
      className: "k-coloreditor-apply",
      "aria-label": e.applyText,
      onClick: e.onApply
    },
    e.applyText
  )));
};
export {
  E as AdaptiveMode
};
