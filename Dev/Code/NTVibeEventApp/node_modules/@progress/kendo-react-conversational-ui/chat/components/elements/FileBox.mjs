/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import * as a from "react";
import { IconWrap as $, getFileExtensionIcon as F } from "@progress/kendo-react-common";
import { Button as g, DropDownButton as M } from "@progress/kendo-react-buttons";
import { xIcon as d, moreVerticalIcon as w, downloadIcon as z } from "@progress/kendo-svg-icons";
import { useLocalization as v } from "@progress/kendo-react-intl";
import { removeFile as i, messages as c, fileActions as f } from "../../../messages/index.mjs";
const T = (u) => {
  const { files: h, onFileRemove: o, onFileAction: r, onDownload: l, fileActions: I, renderInTextarea: k = !1 } = u, s = v(), m = I || [{ id: "download", label: "Download", svgIcon: z }], E = (e) => {
    if (e == null)
      return "";
    if (e === 0)
      return "0 B";
    const n = 1024, t = ["B", "KB", "MB", "GB", "TB"], p = Math.floor(Math.log(e) / Math.log(n));
    return `${parseFloat((e / Math.pow(n, p)).toFixed(2))} ${t[p]}`;
  }, x = (e) => "." + e.split(".").pop() || "", B = (e, n) => {
    e.item.id === "download" && (l == null || l([n])), r == null || r(e.item, e, n);
  }, C = (e) => k ? /* @__PURE__ */ a.createElement(
    g,
    {
      fillMode: "flat",
      themeColor: "base",
      svgIcon: d,
      onClick: (t) => {
        t.stopPropagation(), o == null || o(e.name);
      },
      "aria-label": `${s.toLanguageString(i, c[i])} ${e.name}`
    }
  ) : "uid" in e || !("rawFile" in e) ? m.length > 0 && /* @__PURE__ */ a.createElement(
    M,
    {
      fillMode: "flat",
      themeColor: "base",
      svgIcon: w,
      onClick: (t) => {
        t.syntheticEvent.stopPropagation();
      },
      onItemClick: (t) => B(t, e),
      items: m.map((t) => ({
        id: t.id,
        icon: t.icon,
        text: t.label,
        svgIcon: t.svgIcon
      })),
      "aria-label": `${s.toLanguageString(
        f,
        c[f]
      )} ${e.name}`
    }
  ) : /* @__PURE__ */ a.createElement(
    g,
    {
      fillMode: "flat",
      themeColor: "base",
      svgIcon: d,
      onClick: (t) => {
        t.stopPropagation(), o == null || o(e.name);
      },
      "aria-label": `${s.toLanguageString(i, c[i])} ${e.name}`
    }
  );
  return /* @__PURE__ */ a.createElement("ul", { className: "k-chat-file-wrapper" }, h.map((e) => /* @__PURE__ */ a.createElement("li", { key: e.name, className: "k-chat-file" }, /* @__PURE__ */ a.createElement($, { size: "xxlarge", ...F(x(e.name)) }), /* @__PURE__ */ a.createElement("div", { className: "k-chat-file-info" }, /* @__PURE__ */ a.createElement("span", { className: "k-chat-file-name" }, e.name), /* @__PURE__ */ a.createElement("span", { className: "k-chat-file-size" }, E(e.size))), C(e))));
};
export {
  T as default
};
